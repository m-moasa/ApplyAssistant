{"mappings":"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","sources":["proObject.js"],"sourcesContent":["const position = {\n  name: \"projectName\",\n  email: \"example@gmail.com\",\n  faculty: \"facultyName\",\n  university: \"university\",\n  deadline: \"deadline\",\n  fields: \"fields\",\n  detail: \"detail\",\n  summary: \"Summary\",\n  requiredDocs: \"RequireDocuments\",\n};\nclass proObject {\n  static projectList1 = [];\n  static fieldFilter = [];\n  static universityFilter = [];\n  constructor(projectList, fieldFilter, universityFilter) {\n    this.projectList = projectList;\n    this.fieldFilter = fieldFilter;\n    this.universityFilter = universityFilter;\n  }\n\n  async createProjectList() {\n    var projectsList;\n    this.url = \"http://localhost:5001/api/projects/\";\n    await fetch(this.url)\n      .then((res) => res.json())\n      .then((data) => {\n        projectsList = data;\n      });\n\n    proObject.projectList1 = projectsList;\n    this.updateProject();\n  }\n\n  updateUniFilter(uniName) {\n    var checkbox = document.getElementById(uniName);\n    if (checkbox.checked) {\n      this.universityFilter.push(uniName);\n    } else {\n      const index = this.universityFilter.indexOf(uniName);\n      if (index > -1) {\n        // only splice array when item is found\n        this.universityFilter.splice(index, 1); // 2nd parameter means remove one item only\n      }\n    }\n    this.updateProject();\n  }\n\n  updateFieldFilter(fieldName) {\n    var checkbox = document.getElementById(fieldName);\n    if (checkbox.checked) {\n      this.fieldFilter.push(fieldName);\n    } else {\n      const index = this.fieldFilter.indexOf(fieldName);\n      if (index > -1) {\n        // only splice array when item is found\n        this.fieldFilter.splice(index, 1); // 2nd parameter means remove one item only\n      }\n    }\n    this.updateProject();\n  }\n\n  async sendDefineProjectToBack(position) {\n    this.url = \"http://localhost:5001/api/projects/\";\n    fetch(this.url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(position),\n    });\n    // send the  define project to back\n    console.log(position, \" new_position\");\n\n    // TODO : should uncomment these 2 lines after getting response from the back to update the positions\n\n    // proObject.projectList1 = projectsList;\n    // this.updateProject();\n\n    window.location.href = \"index.html\";\n  }\n\n  back(){\n    console.log(\"AAAqqqqqqqqqqq\");\n        // this.updateProject();\n\n    window.location.href = \"index.html\";\n  }\n  submitProject() {\n    console.log(\"submitProject\");\n\n    var projectTitle = document.getElementById(\"projectTitle\").value;\n    var proffessorFullname =\n      document.getElementById(\"proffessorFullname\").value;\n    var proffessorField = document.getElementById(\"proffessorField\").value;\n    var proffessorUniversity = document.getElementById(\n      \"proffessorUniversity\"\n    ).value;\n    var proffessorDeadline =\n      document.getElementById(\"proffessordeadline\").value;\n    var proffessorEmail = document.getElementById(\"proffessoremail\").value;\n    var proffessorRequireDocuments = document.getElementById(\n      \"proffessorRequireDocuments\"\n    ).value;\n    var proffessorSummary = document.getElementById(\"proffessorsummary\").value;\n    var proffessorExplanation = document.getElementById(\n      \"proffessorexplanation\"\n    ).value;\n\n    const projectData = Object.create(position);\n    projectData.name = projectTitle;\n    projectData.faculty = proffessorFullname;\n    projectData.university = proffessorUniversity;\n    projectData.deadline = proffessorDeadline;\n    projectData.fields = proffessorField;\n    projectData.detail = proffessorExplanation;\n    projectData.email = proffessorEmail;\n    projectData.summary = proffessorSummary;\n    projectData.requiredDocs = proffessorRequireDocuments;\n\n    this.sendDefineProjectToBack(projectData);\n  }\n\n  addProject(project) {\n    console.log(project);\n    proObject.projectList1.push(project);\n    this.updateProject();\n  }\n\n  updateProject() {\n    while (this.projectList.firstChild) {\n      this.projectList.removeChild(this.projectList.firstChild);\n    }\n    proObject.projectList1.forEach((project, index) => {\n      if (\n        (this.fieldFilter.includes(project.fields) ||\n          this.fieldFilter.length == 0) &&\n        (this.universityFilter.includes(project.university) ||\n          this.universityFilter.length == 0)\n      ) {\n        const section = document.createElement(\"SECTION\");\n        section.classList.add(\"frame-section\");\n\n        const projectNameParent = document.createElement(\"DIV\");\n        projectNameParent.classList.add(\"project-name-parent\");\n\n        const projectName = document.createElement(\"B\");\n        projectName.classList.add(\"project-name\");\n\n        const projectNameLine2 = document.createElement(\"P\");\n        projectNameLine2.classList.add(\"project\");\n        projectNameLine2.textContent = project.name;\n\n        projectName.appendChild(projectNameLine2);\n\n        const facultyName = document.createElement(\"DIV\");\n        facultyName.classList.add(\"faculty-name\");\n        facultyName.textContent = project.faculty;\n\n        const universityName = document.createElement(\"DIV\");\n        universityName.classList.add(\"faculty-name\");\n        universityName.textContent = project.university;\n\n        const deadlineDiv = document.createElement(\"DIV\");\n        deadlineDiv.classList.add(\"faculty-name\");\n        deadlineDiv.textContent = project.deadline;\n\n        const fieldsDiv = document.createElement(\"DIV\");\n        fieldsDiv.classList.add(\"faculty-name\");\n        fieldsDiv.textContent = project.fields;\n\n        const detailDiv = document.createElement(\"DIV\");\n        detailDiv.classList.add(\"detaildetaildetaildetaildetail\");\n        detailDiv.textContent = project.summary;\n\n        projectNameParent.appendChild(projectName);\n        projectNameParent.appendChild(facultyName);\n        projectNameParent.appendChild(universityName);\n        projectNameParent.appendChild(deadlineDiv);\n        projectNameParent.appendChild(fieldsDiv);\n        projectNameParent.appendChild(detailDiv);\n\n        const applyButton = document.createElement(\"BUTTON\");\n        applyButton.addEventListener(\"click\", function () {\n          var email1 = project.email;\n          var subject1 = \"Request for information on project \" + project.name;\n          var emailBody =\n            \"Dear \" +\n            project.faculty +\n            \",\\n\\nI am interested in learning more about your \" +\n            project.name +\n            \" project. Can you please provide additional information about the project and the application process?\\n\\nThank you,\\n[Your Name]\";\n          var url =\n            \"https://mail.google.com/mail/?view=cm&to=\" +\n            email1 +\n            \"&su=\" +\n            encodeURIComponent(subject1) +\n            \"&body=\" +\n            encodeURIComponent(emailBody);\n          var encodedProjectObject = encodeURIComponent(\n            JSON.stringify(window.projectObject)\n          );\n          var encodedProjectname = encodeURIComponent(\n            JSON.stringify(project.name  )\n          );\n          var encodedProjectdetail= encodeURIComponent(\n            JSON.stringify(project.detail  )\n          );\n\n          window.location.href =\n            \"./project-info-page.html?data===\" +\n            encodedProjectObject +\n            \"===\" +\n            url+\n            \"===\" +\n            encodedProjectname +\n            \"===\" +\n            encodedProjectdetail;\n        });\n\n        applyButton.classList.add(\"apply-wrapper\");\n\n        const apply = document.createElement(\"B\");\n        apply.classList.add(\"apply\");\n        apply.textContent = \"Apply\";\n\n        applyButton.appendChild(apply);\n        section.appendChild(projectNameParent);\n        section.appendChild(applyButton);\n\n        this.projectList.appendChild(section);\n      }\n    });\n  }\n\n  connect(url) {\n    var applyButton = document.getElementById(\"connectBTN\");\n    applyButton.addEventListener(\"click\", function () {\n      window.open(url);\n    });\n  }\n\n  remove(index) {\n    proObject.projectList1.splice(index, 1);\n    this.updateProject();\n  }\n}\n"],"names":[],"version":3,"file":"index.e78faa8c.js.map","sourceRoot":"/__parcel_source_root/"}